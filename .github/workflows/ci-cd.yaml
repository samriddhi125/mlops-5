# .github/workflows/ci-cd.yaml
name: CD - Train and Deploy Fatality Predictor

on:
  push:
    branches:
      - main # Or your deployment branch

jobs:
  train-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1 # Change to your S3 bucket's region

      - name: Set up Python and DVC
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - run: |
          pip install -r requirements.txt
      
      - name: Pull DVC Data
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: dvc pull -r origin

      - name: Run DVC Pipeline
        run: dvc repro
      
      - name: Push Model to DVC Remote
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: dvc push -r origin

      - name: Commit DVC changes
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add .
          git commit -m "chore: Update DVC pipeline and model" || echo "No changes to commit"
          git push

  deploy-to-ec2:
    runs-on: ubuntu-latest
    needs: train-and-deploy
    if: success()
    steps:
      - name: Deploy to EC2 instance
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }} # e.g., 'ubuntu' or 'ec2-user'
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            cd israel-palestine-ml-app
            git pull
            docker compose up --build -d